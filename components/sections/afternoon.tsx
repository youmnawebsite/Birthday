"use client"

import { useState, useEffect } from "react"
import { motion, AnimatePresence } from "framer-motion"
import { Button } from "@/components/ui/button"
import { Card } from "@/components/ui/card"
import { Heart, Quote, Gift, Gamepad } from "lucide-react"
import RomanticQuotes from "@/components/romantic-quotes"
import MemoryGame from "@/components/games/memory-game"

export default function Afternoon() {
  const [activeSection, setActiveSection] = useState<string | null>(null)
  const [mounted, setMounted] = useState(false)

  useEffect(() => {
    setMounted(true)
  }, [])

  // Pre-defined special moments
  const specialMoments = [
    {
      id: 1,
      title: "ุฃูู ูุฑู ุงุดููู",
      description:
        "ุงูู ูุฑู ุดููุชู ุจูู ูุงู ุงูู ููู ูุฒูุช ููู ุงูุฏุฑุงูุง ุชุญุช ุชูุฑูุจุง ุงู ุชุงูู ููู ููุชู ุฏุงุฎูู ุงูุชู ูุชูู ูููุฏู ุฏุฎูุชู ุจุชุณููู ุนุงููุณุชุฑ ููู ุจูุญุงูู ููุชูุฑ ุงุณุงูููู ููุฏู ู ุงูุง ููุช ุจุตูุช ูุฏู ุจุตู ูุงูุช ุญููู ุงูู ุนุดุงู ููุช ุดุงููู ูุฏู ูุนูู ุดุงููู ุญููู ุงูู ุงูู ุงูู ุงูู ุจุฌุฏ ูุนูู ุดุงููู ุงู ููุงูุญู ุญููู ูุทุฑููุชู ููุงู ุชุญูู ูุงูุช ุฏู ุงูู ูุฑู ุงุดููู ูููุง",
      icon: <Heart className="h-5 w-5 text-red-500" />,
    },
    {
      id: 2,
      title: "ุฃูู ูุฏูุฉ",
      description:
        "ุงูุชู ุงููู ุฌูุจุชู ุงูู ูุฏูู ุจุนูุฏุง ุนู ุงูุญุงุฌุงุช ุงูุซุบูุชูุชุชู ุงููู ุจุฌูุจูุงูู ูุงููู ูุฌูุจูุงูู ูุนูู ุงูุง ุงูุงุจูู ุงูู ูุฏูู ูุนูู ูู ุฌุช ูู ููุช ูููุงุด ุนุงูุฒูููุง ุชูุฌู ููู ุจุณ ุตุฏูููู ุงูุง ููุตุฑ ูู ุฑุฏุฉ ูุนูู ุจ ุงูุจุณุงุทู ุจุงููุฏูู ูุฃููุง ูุญูุธู ููู ุงููู ุจุณุชุฎุฏููุง ูุงููู ูุจูุชูุฑู ูู ูุฑู ูููุงู ุญุงุทุท ุงููุฑูู ุงูููุฑ ุจุชุงุนุชู ูููุง ุงููุฏูุชูู ุฏูู ูููุถูู ูู ุฏูุงุบู ุทูู ุญูุงุชู",
      icon: <Gift className="h-5 w-5 text-purple-500" />,
    },
    {
      id: 3,
      title: "ุฃูู ุถุญูุฉ",
      description:
        "ุงูู ุถุญูู ุฏู ูุนูู ุจุฑุฏู ุจุนุชุจุฑูุง ููุช ุงูุง ุตูุฑุชููู ุจุนุฏูุง ุงูุชู ููุชู ุจูุถุญูู ุถุญูุชู ูุชูุฑ ุงูู ูุนุฌุจุชูู ุถุญูุชู ุงูู ุงูู ูููุงู ูุงุญูุง ูุงุฒููู ุถุญููุง ุจุฑุฏู ูููุงู ููุง ููุง ุจูุจุต ูุจุนุถ ููุถุญู ููุง ููุช ุจููุดู ูุงุจุนุชูู ูุงูุดุงุช ูุงุญูุง ูุตุงุฏ ุจุนุถ",
      icon: <Quote className="h-5 w-5 text-blue-500" />,
    },
  ]

  if (!mounted) return null

  return (
    <div className="flex flex-col items-center" dir="rtl">
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.5 }}
        className="text-center mb-8 w-full"
      >
        <motion.div
          initial={{ scale: 0.9, opacity: 0 }}
          animate={{ scale: 1, opacity: 1 }}
          transition={{ duration: 0.5, delay: 0.2 }}
          className="mb-8"
        >
          <div className="inline-block bg-gradient-to-r from-blue-400 to-purple-500 p-3 rounded-full shadow-lg mb-4">
            <div className="bg-white rounded-full p-3">
              <span className="text-3xl">๐</span>
            </div>
          </div>
          <h1 className="text-3xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent mb-2">
            ูุญุธุงุช ุญููุฉ
          </h1>
          <p className="text-sm text-gray-500">ุฐูุฑูุงุช ูููุงู ูู ุงูููุจ</p>
        </motion.div>

        <Card className="max-w-4xl mx-auto bg-white/90 backdrop-blur-sm rounded-xl shadow-lg p-6 mb-8 border border-blue-100">
          <AnimatePresence mode="wait">
            {activeSection === null ? (
              <motion.div
                key="menu"
                initial={{ opacity: 0 }}
                animate={{ opacity: 1 }}
                exit={{ opacity: 0 }}
                className="space-y-6"
              >
                <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                  <motion.div
                    whileHover={{ scale: 1.03 }}
                    whileTap={{ scale: 0.98 }}
                    className="cursor-pointer"
                    onClick={() => setActiveSection("quotes")}
                  >
                    <Card className="bg-gradient-to-r from-purple-100 to-blue-100 p-6 h-full border-none shadow-md hover:shadow-lg transition-all duration-300">
                      <div className="flex flex-col items-center text-center">
                        <div className="bg-gradient-to-r from-purple-500 to-blue-500 p-3 rounded-full shadow-md mb-4">
                          <Quote className="h-6 w-6 text-white" />
                        </div>
                        <h3 className="text-xl font-semibold mb-2">ููุงู ุญูู</h3>
                        <p className="text-gray-600">ุดููุฉ ุงุจูุงุช ุดุนุฑ ุจูู ูู ุงูุฃุฎุฑ</p>
                      </div>
                    </Card>
                  </motion.div>

                  <motion.div
                    whileHover={{ scale: 1.03 }}
                    whileTap={{ scale: 0.98 }}
                    className="cursor-pointer"
                    onClick={() => setActiveSection("moments")}
                  >
                    <Card className="bg-gradient-to-r from-teal-100 to-green-100 p-6 h-full border-none shadow-md hover:shadow-lg transition-all duration-300">
                      <div className="flex flex-col items-center text-center">
                        <div className="bg-gradient-to-r from-teal-500 to-green-500 p-3 rounded-full shadow-md mb-4">
                          <Heart className="h-6 w-6 text-white" />
                        </div>
                        <h3 className="text-xl font-semibold mb-2">ุฐูุฑูุงุช ุญููุฉ</h3>
                        <p className="text-gray-600">ูุญุธุงุช ูุด ูููุณุงูุง</p>
                      </div>
                    </Card>
                  </motion.div>

                  <motion.div
                    whileHover={{ scale: 1.03 }}
                    whileTap={{ scale: 0.98 }}
                    className="cursor-pointer"
                    onClick={() => setActiveSection("game")}
                  >
                    <Card className="bg-gradient-to-r from-amber-100 to-orange-100 p-6 h-full border-none shadow-md hover:shadow-lg transition-all duration-300">
                      <div className="flex flex-col items-center text-center">
                        <div className="bg-gradient-to-r from-amber-500 to-orange-500 p-3 rounded-full shadow-md mb-4">
                          <Gamepad className="h-6 w-6 text-white" />
                        </div>
                        <h3 className="text-xl font-semibold mb-2">ูุนุจุฉ ุซุบูุชูุชุชู</h3>
                        <p className="text-gray-600"> ููุง ููุนุจ ุดููุฉ ูุจููุชู</p>
                      </div>
                    </Card>
                  </motion.div>
                </div>
              </motion.div>
            ) : activeSection === "quotes" ? (
              <motion.div
                key="quotes"
                initial={{ opacity: 0, scale: 0.95 }}
                animate={{ opacity: 1, scale: 1 }}
                exit={{ opacity: 0, scale: 0.95 }}
                transition={{ duration: 0.3 }}
                className="space-y-6"
              >
                <div className="flex items-center justify-between mb-4">
                  <h2 className="text-2xl font-semibold text-purple-700">ููุงู ุญูู</h2>
                  <Button
                    variant="ghost"
                    size="sm"
                    onClick={() => setActiveSection(null)}
                    className="hover:bg-purple-50"
                  >
                    ุฑุฌูุน
                  </Button>
                </div>

                <RomanticQuotes />
              </motion.div>
            ) : activeSection === "game" ? (
              <motion.div
                key="game"
                initial={{ opacity: 0, scale: 0.95 }}
                animate={{ opacity: 1, scale: 1 }}
                exit={{ opacity: 0, scale: 0.95 }}
                transition={{ duration: 0.3 }}
                className="space-y-6"
              >
                <div className="flex items-center justify-between mb-4">
                  <h2 className="text-2xl font-semibold text-amber-600">ูุนุจุฉ ุตุบูุฑุฉ</h2>
                  <Button
                    variant="ghost"
                    size="sm"
                    onClick={() => setActiveSection(null)}
                    className="hover:bg-amber-50"
                  >
                    ุฑุฌูุน
                  </Button>
                </div>

                <MemoryGame />
              </motion.div>
            ) : (
              <motion.div
                key="moments"
                initial={{ opacity: 0, scale: 0.95 }}
                animate={{ opacity: 1, scale: 1 }}
                exit={{ opacity: 0, scale: 0.95 }}
                transition={{ duration: 0.3 }}
                className="space-y-6"
              >
                <div className="flex items-center justify-between mb-4">
                  <h2 className="text-2xl font-semibold text-teal-700">ุฐูุฑูุงุช ุญููุฉ</h2>
                  <Button variant="ghost" size="sm" onClick={() => setActiveSection(null)} className="hover:bg-teal-50">
                    ุฑุฌูุน
                  </Button>
                </div>

                <div className="space-y-4">
                  {specialMoments.map((moment) => (
                    <motion.div
                      key={moment.id}
                      initial={{ opacity: 0, y: 20 }}
                      animate={{ opacity: 1, y: 0 }}
                      transition={{ duration: 0.5, delay: moment.id * 0.1 }}
                    >
                      <Card className="p-4 bg-gradient-to-r from-teal-50 to-green-50 border border-teal-100">
                        <div className="flex items-start">
                          <div className="bg-white p-2 rounded-full shadow-sm ml-3">{moment.icon}</div>
                          <div>
                            <h3 className="text-lg font-medium text-teal-700 mb-1">{moment.title}</h3>
                            <p className="text-gray-600">{moment.description}</p>
                          </div>
                        </div>
                      </Card>
                    </motion.div>
                  ))}
                </div>
              </motion.div>
            )}
          </AnimatePresence>
        </Card>
      </motion.div>
    </div>
  )
}

